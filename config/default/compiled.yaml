apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cplane
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: cplane
    control-plane: controller-manager
  name: cplane-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: nats.mfplane.mfplane.io
spec:
  group: mfplane.mfplane.io
  names:
    kind: Nat
    listKind: NatList
    plural: nats
    singular: nat
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Nat is the Schema for the nats API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NatSpec defines the desired state of Nat
            properties:
              loadBalancer:
                properties:
                  replicas:
                    type: integer
                  selector:
                    properties:
                      matchLabels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                required:
                - replicas
                type: object
              natFiltering:
                type: string
              natMapping:
                type: string
              natPortHashBit:
                type: integer
              networkFunction:
                properties:
                  replicas:
                    type: integer
                  selector:
                    properties:
                      matchLabels:
                        additionalProperties:
                          type: string
                        type: object
                    type: object
                required:
                - replicas
                type: object
              sources:
                items:
                  type: string
                type: array
              uSidBlockLength:
                type: integer
              uSidFunctionLength:
                type: integer
              vip:
                type: string
            required:
            - loadBalancer
            - natFiltering
            - natMapping
            - natPortHashBit
            - networkFunction
            - sources
            - uSidBlockLength
            - uSidFunctionLength
            - vip
            type: object
          status:
            description: NatStatus defines the observed state of Nat
            properties:
              revisions:
                items:
                  properties:
                    backends:
                      items:
                        type: string
                      type: array
                  required:
                  - backends
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: nodes.mfplane.mfplane.io
spec:
  group: mfplane.mfplane.io
  names:
    kind: Node
    listKind: NodeList
    plural: nodes
    singular: node
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Node is the Schema for the nodes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NodeSpec defines the desired state of Node
            properties:
              functions:
                items:
                  properties:
                    configFile:
                      type: string
                    device:
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      type: object
                    mode:
                      type: string
                    name:
                      type: string
                    natSessionTimeoutSeconds:
                      description: NatSessionTimeoutSeconds indicates how long it
                        takes to clean out the session cache that has not been updated.
                        Many NAT implementations has this parameter for each Transport
                        protocol, but currently it is the same for all protocols.
                        It will be implemented when needed.
                      type: integer
                    netns:
                      type: string
                    segmentRoutingSrv6:
                      properties:
                        encapSource:
                          type: string
                        locators:
                          items:
                            properties:
                              anycast:
                                type: boolean
                              block:
                                type: string
                              name:
                                type: string
                              prefix:
                                type: string
                            required:
                            - block
                            - name
                            - prefix
                            type: object
                          type: array
                      required:
                      - encapSource
                      - locators
                      type: object
                    type:
                      type: string
                  required:
                  - device
                  - mode
                  - name
                  - type
                  type: object
                type: array
              hostname:
                type: string
            required:
            - hostname
            type: object
          status:
            description: NodeStatus defines the observed state of Node
            properties:
              functions:
                items:
                  properties:
                    name:
                      type: string
                    pidfile:
                      type: string
                    running:
                      type: boolean
                  required:
                  - name
                  - pidfile
                  - running
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: srv6segments.mfplane.mfplane.io
spec:
  group: mfplane.mfplane.io
  names:
    kind: Srv6Segment
    listKind: Srv6SegmentList
    plural: srv6segments
    shortNames:
    - seg
    singular: srv6segment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: STATE
      type: string
    - jsonPath: .status.sid
      name: SID
      type: string
    - jsonPath: .status.nodeName
      name: NODE
      priority: 1
      type: string
    - jsonPath: .status.funcName
      name: FUNC
      priority: 1
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Srv6Segment is the Schema for the srv6segments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Srv6SegmentSpec defines the desired state of Srv6Segment
            properties:
              endMflNat:
                properties:
                  natPortHashBit:
                    type: integer
                  uSidBlockLength:
                    type: integer
                  uSidFunctionLength:
                    type: integer
                  uSidFunctionRevisions:
                    items:
                      properties:
                        backends:
                          items:
                            type: string
                          type: array
                      required:
                      - backends
                      type: object
                    type: array
                  vip:
                    type: string
                required:
                - natPortHashBit
                - uSidBlockLength
                - uSidFunctionLength
                - vip
                type: object
              endMfnNat:
                properties:
                  natPortHashBit:
                    type: integer
                  sources:
                    items:
                      type: string
                    type: array
                  uSidBlockLength:
                    type: integer
                  uSidFunctionLength:
                    type: integer
                  vip:
                    type: string
                required:
                - natPortHashBit
                - sources
                - uSidBlockLength
                - uSidFunctionLength
                - vip
                type: object
              locator:
                type: string
              selector:
                properties:
                  matchLabels:
                    additionalProperties:
                      type: string
                    type: object
                type: object
            required:
            - locator
            type: object
          status:
            description: Srv6SegmentStatus defines the observed state of Srv6Segment
            properties:
              funcName:
                type: string
              nodeName:
                type: string
              sid:
                type: string
              state:
                description: State indicates the current Segment state. The behavior
                  of reconcile changes accordingly.
                enum:
                - Terminating
                - Active
                - Configuring
                - Pending
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cplane
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: cplane
  name: cplane-controller-manager
  namespace: cplane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cplane
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: cplane
  name: cplane-leader-election-role
  namespace: cplane-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: cplane-manager-role
rules:
- apiGroups:
  - mfplane.mfplane.io
  resources:
  - nats
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mfplane.mfplane.io
  resources:
  - nats/finalizers
  verbs:
  - update
- apiGroups:
  - mfplane.mfplane.io
  resources:
  - nats/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - mfplane.mfplane.io
  resources:
  - nodes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mfplane.mfplane.io
  resources:
  - nodes/finalizers
  verbs:
  - update
- apiGroups:
  - mfplane.mfplane.io
  resources:
  - nodes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - mfplane.mfplane.io
  resources:
  - srv6segments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mfplane.mfplane.io
  resources:
  - srv6segments/finalizers
  verbs:
  - update
- apiGroups:
  - mfplane.mfplane.io
  resources:
  - srv6segments/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cplane
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cplane
  name: cplane-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cplane
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: cplane
  name: cplane-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cplane
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: cplane
  name: cplane-leader-election-rolebinding
  namespace: cplane-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cplane-leader-election-role
subjects:
- kind: ServiceAccount
  name: cplane-controller-manager
  namespace: cplane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: cplane
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: cplane
  name: cplane-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cplane-manager-role
subjects:
- kind: ServiceAccount
  name: cplane-controller-manager
  namespace: cplane-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cplane
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: cplane
  name: cplane-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cplane-proxy-role
subjects:
- kind: ServiceAccount
  name: cplane-controller-manager
  namespace: cplane-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: cplane
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: cplane
    control-plane: controller-manager
  name: cplane-controller-manager-metrics-service
  namespace: cplane-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: cplane
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: cplane
    control-plane: controller-manager
  name: cplane-controller-manager
  namespace: cplane-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /usr/bin/manager
        image: slankdev/mfplane:develop
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: cplane-controller-manager
      terminationGracePeriodSeconds: 10
